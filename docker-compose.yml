version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: playable-ads-postgres
    environment:
      POSTGRES_DB: playable_ads_db
      POSTGRES_USER: playable_user
      POSTGRES_PASSWORD: playable_password
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U playable_user -d playable_ads_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: playable-ads-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: playable_user
      RABBITMQ_DEFAULT_PASS: playable_password
    ports:
      - "5673:5672" # AMQP port
      - "15673:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build: .
    container_name: playable-ads-app
    command: >
      sh -c "npx prisma migrate deploy && npm start"
    environment:
      # Database
      DATABASE_URL: postgresql://playable_user:playable_password@postgres:5432/playable_ads_db

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # AWS S3 (you'll need to set these)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}

      # RabbitMQ
      RABBITMQ_URL: amqp://playable_user:playable_password@rabbitmq:5672

      # Server
      PORT: 8080

      # Logging
      LOG_LEVEL: INFO
      LOG_TO_FILE: true
      LOG_FILE_PATH: /app/logs/app.log

      # FFmpeg
      FFMPEG_FONT_PATH: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  # Worker Process
  worker:
    build: .
    container_name: playable-ads-worker
    command: ["npm", "run", "start:worker"]
    environment:
      # Database
      DATABASE_URL: postgresql://playable_user:playable_password@postgres:5432/playable_ads_db

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # AWS S3
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}

      # RabbitMQ
      RABBITMQ_URL: amqp://playable_user:playable_password@rabbitmq:5672

      # Logging
      LOG_LEVEL: INFO
      LOG_TO_FILE: true
      LOG_FILE_PATH: /app/logs/worker.log

      # FFmpeg
      FFMPEG_FONT_PATH: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
