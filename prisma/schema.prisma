generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AssetType {
     IMAGE 
     VIDEO 
     }
enum JobStatus{
     PENDING 
     PROCESSING 
     DONE 
     FAILED 
     }
enum EventType{ 
    PLAY 
    CLICK 
    IMPRESSION 
    }

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  projects   Project[]
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt     @map("updated_at")
}

model Project {
  id          String    @id @default(uuid())
  title       String
  description String?
  userId      String?   @map("user_id")
  user        User?     @relation(fields: [userId], references: [id])
  assets      Asset[]
  jobs        Job[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt     @map("updated_at")
}

model Asset {
  id         String    @id @default(uuid())
  projectId  String    @map("project_id")
  project    Project   @relation(fields: [projectId], references: [id])
  filename   String
  mime       String
  size       Int
  type       AssetType
  s3Path      String   @map("s3_path")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt     @map("updated_at")
}

model Job {
  id         String    @id @default(uuid())
  projectId  String
  project    Project   @relation(fields: [projectId], references: [id])
  assetId    String?
  status     JobStatus @default(PENDING)
  attempts   Int       @default(0)
  outputUrl  String?   @map("output_url")
  error      String?
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt     @map("updated_at")
}

model AnalyticsEvent {
  id         String   @id @default(uuid())
  projectId  String?  @map("project_id")
  eventType  EventType @map("event_type")
  payload    Json?    
  createdAt  DateTime @default(now()) @map("created_at")
}
